name: openwrt-packages        ## Actions工作流的名称

on:
  push:
    paths:
      - '.github/workflows/openwrt-packages.yml'       ## 运行 openwrt-packages 工作流
      - 'master.sh'  
  schedule:                                            ## 定时触发开始编译(时间设置请看定时编译说明)
    - cron: 0 */6 * * *
  repository_dispatch:                                  ## 存储库调度
  workflow_dispatch:                 ## 工作流程_调度
    inputs:
      packages:
        description: 'packages'          ## 手动运行工作流 
        required: false
        default: 'false'	

jobs:
  job_openwrt-packages:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: ubuntu-latest                 ## ubuntu-最新版

    name: 更新openwrt-packages             ## 运行工作流的名称 Update openwrt-packages
    strategy:
      fail-fast: false
      matrix:
        target: [master]              ## 运行master脚本（在DIY目录内）
        
    steps:
    - name: 准备环境                      ## Checkout 
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: 安装编译环境                ## Initialization environment
      run : |
        pwd && ls
        
        git config --global user.email "zuoweiid@users.noreply.github.com"         ## 设置提交电子邮件地址
        git config --global user.name "actions-user"                               ## 名称
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: 克隆软件包                   ## Clone packages
      run: |
        pwd && ls
        
        cd $GITHUB_WORKSPACE              ## 进入工作目录
        chmod +x .github/diy/${{matrix.target}}.sh      ## 给与workflows目录内脚本  可执行的权限
        git clone -b master https://github.com/kenzok8/openwrt-packages.git ${{matrix.target}}     ## 克隆到master目录内
        cd ${{matrix.target}}                                                                      ## 进入master目录内
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name "diy"` >/dev/null 2>&1
        $GITHUB_WORKSPACE/.github/diy/${{matrix.target}}.sh                                     ## 执行master.sh
        bash /$GITHUB_WORKSPACE/.github/diy/convert_translation.sh                      ## 执行convert_translation.sh
        bash /$GITHUB_WORKSPACE/.github/diy/create_acl_for_luci.sh -a                   ## 执行create_acl_for_luci.sh
        bash /$GITHUB_WORKSPACE/.github/diy/Modify.sh                                   ## 执行Modify.sh

    - name: 上传   ## Upload
      env: 
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}          ## 项目仓库中添加：ACCESS_TOKEN 令牌值
      run: |
        pwd && ls
        
        if [ -e $GITHUB_WORKSPACE/LICENSE ]; then
          cp $GITHUB_WORKSPACE/LICENSE $GITHUB_WORKSPACE/${{matrix.target}}
        fi
        if [ -e $GITHUB_WORKSPACE/README.md ]; then
          cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/${{matrix.target}}
        fi
        cd $GITHUB_WORKSPACE/${{matrix.target}}
        if git status --porcelain | grep .; then
          git add .
          git commit -am "update $(date '+%Y-%m-%d %H:%M:%S')"
          git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/zuoweiid/luci-app.git" HEAD:${{matrix.target}}     ## 上传仓库的地址
        else
          echo "nothing to commit"
          exit 0
        fi || exit 0    
        
    - name: 删除工作流程运行      ## Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: zuoweiid/openwrt-packages
        retain_days: 1
        keep_minimum_runs: 1
